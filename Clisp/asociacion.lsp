(defun recorre (lista) 
    (when lista 
        (let ((elemento (car lista)))
        (format t "Â¿Tu personaje es ~a?~%" (car elemento)) 
        (setq a (read))
        (if (string-equal a "si")
            (progn
                (setq b (cadr (assoc (car elemento) lista)))
                (recorre b)
            )
        (recorre (cdr lista))
        )
        )
    )
)
;;

(defparameter *nodes* '(
    (Sedan(
        (Toyota (Camry))
        (Honda (Civic ))
        (Mazda (tres ))
        (Nissan (Versa ))
        (Chevrolet (Civic ))
    )
    )
    (SUV (
        (Toyota (Rav Cuatro))
        (Honda (CRV ))
        (Mazda (CX Noventa ))
        (Nissan (X trail ))
        (Chevrolet (Blazer ))
    )
    )
    (Pickup (
        (Toyota (Tacoma))
        (Honda (Ridgeline ))
        (Mazda (BT Cincuenta ))
        (Nissan (Frontier ))
        (Chevrolet (S10 ))
        )
    )
    (Deportivo (
        (Toyota (GT86))
        (Honda (CivicType R ))
        (Mazda (MX5 ))
        (Nissan (GTR ))
        (Chevrolet (Camaro ))
        )
    )
    (Hatchback (
       (Toyota (Yaris))
        (Honda (City ))
        (Mazda (dos ))
        (Nissan (March ))
        (Chevrolet (Aveo ))
    )
    )
))
